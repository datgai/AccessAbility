FROM node:20-alpine AS build

WORKDIR /usr/src/app/serverbuild

# Leverage a cache mount to /root/.npm to speed up subsequent builds.
# Leverage a bind mounts to package.json and package-lock.json to avoid having to copy them into
# into this layer.
RUN --mount=type=bind,source=server/package.json,target=package.json \
    --mount=type=bind,source=server/package-lock.json,target=package-lock.json \
    --mount=type=cache,target=/root/.npm \
    npm ci

# Copy files
COPY server .
COPY shared ../shared

# Build
RUN npm run build --omit=dev

# Main
FROM node:20-alpine

WORKDIR /usr/src/app/server

# Copy built files that are necessary
COPY --from=build /usr/src/app/serverbuild/dist ./dist
COPY --from=build /usr/src/app/serverbuild/node_modules ./node_modules
COPY --from=build /usr/src/app/shared ../shared
COPY server/package.json .

# Expose the port that the application listens on.
EXPOSE 3000

# Run the application.
CMD [ "npm", "start" ]
